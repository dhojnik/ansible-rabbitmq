---

- name: configuration | soft limits (non-systemd)
  pam_limits:
    domain="rabbit"
    limit_type="soft"
    limit_item="nofile"
    value="{{ rabbitmq_nofile_limit }}"
  when: ansible_service_mgr != "systemd"

- name: configuration | hard limits (non-systemd)
  pam_limits:
    domain="rabbit"
    limit_type="hard"
    limit_item="fsize"
    use_max="yes"
    value="{{ rabbitmq_nofile_limit }}"
  when: ansible_service_mgr != "systemd"

- name: configuration | systemd unit directory
  file:
    path: /etc/systemd/system/rabbitmq-server.service.d
    state: directory

- name: configuration | nofile limit (systemd)
  template:
    src="systemd_limits.conf.j2"
    dest="/etc/systemd/system/rabbitmq-server.service.d/limits.conf"
    owner="root"
    group="root"
    mode=0644
    backup="yes"
  notify: reload systemd
  when: ansible_service_mgr == "systemd"

- name: configuration | create the ssl folder for rabbitmq
  file:
    path="/etc/rabbitmq/ssl/"
    owner="rabbitmq"
    group="rabbitmq"
    mode=0750
    state="directory"
  when: rabbitmq_ssl and rabbitmq_copy_ssl_files

- name: configuration | copy the ssl certificates
  copy:
    src="{{ item.src }}"
    dest="{{ item.dest }}"
    owner="rabbitmq"
    group="rabbitmq"
    mode=0640
    backup="yes"
  with_items:
    - src: "{{ rabbitmq_cacert }}"
      dest: "{{ rabbitmq_conf_ssl_options_cacertfile }}"
    - src: "{{ rabbitmq_server_key }}"
      dest: "{{ rabbitmq_conf_ssl_options_keyfile }}"
    - src: "{{ rabbitmq_server_cert }}"
      dest: "{{ rabbitmq_conf_ssl_options_certfile }}"
  when: rabbitmq_ssl and rabbitmq_copy_ssl_files

- name: configuration | generate the configuration of rabbitmq
  template:
    src="rabbitmq.config.j2"
    dest="/etc/rabbitmq/rabbitmq.config"
    owner="rabbitmq"
    group="rabbitmq"
    mode=0640
  notify: restart rabbitmq-server

- name: configuration | generate environment-specific configuration
  template:
    src="rabbitmq-env.conf.j2"
    dest="/etc/rabbitmq/rabbitmq-env.conf"
    owner="rabbitmq"
    group="rabbitmq"
    mode=0644
    backup="yes"
  notify: restart rabbitmq-server
  when: rabbitmq_conf_env is defined
